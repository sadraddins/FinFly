import feedparser
import requests
import asyncio
from aiogram import Bot, Dispatcher
from aiogram.types import InputMediaPhoto

# üëâ –í—Å—Ç–∞–≤—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ ID –∫–∞–Ω–∞–ª–∞
BOT_TOKEN = "8153514298:AAF7-BNxhvrdTtZsh-tuPyJZwww34f3izGE"
CHANNEL_ID = "@FinFly_az"

# üëâ –°—Å—ã–ª–∫–∞ –Ω–∞ RSS-–ª–µ–Ω—Ç—É
RSS_URL = "https://cdn.mysitemapgenerator.com/shareapi/rss/2603963328"

# üëâ –•—Ä–∞–Ω–∏–º —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
sent_links = set()

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

async def fetch_rss():
    """–ü–æ–ª—É—á–∞–µ—Ç –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ RSS –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ –∫–∞–Ω–∞–ª."""
    global sent_links
    feed = feedparser.parse(RSS_URL)

    for entry in feed.entries[::-1]:  # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –≤ –ø–æ—Ä—è–¥–∫–µ –ø–æ—è–≤–ª–µ–Ω–∏—è
        title = entry.title
        link = entry.link
        description = entry.summary if "summary" in entry else "–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è"
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
        image_url = None
        if "media_content" in entry:
            image_url = entry.media_content[0]["url"]
        elif "links" in entry:
            for l in entry.links:
                if l.get("type", "").startswith("image"):
                    image_url = l["href"]
                    break
        
        if link not in sent_links:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –ª–∏ —É–∂–µ —ç—Ç—É –Ω–æ–≤–æ—Å—Ç—å
            sent_links.add(link)  

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ—Å—Ç—å –≤ –∫–∞–Ω–∞–ª
            if image_url:
                media = InputMediaPhoto(media=image_url, caption=f"üì∞ *{title}*\n\n{description}\n[–ß–∏—Ç–∞—Ç—å –¥–∞–ª—å—à–µ]({link})", parse_mode="Markdown")
                await bot.send_photo(CHANNEL_ID, media=media.media, caption=media.caption, parse_mode="Markdown")
            else:
                await bot.send_message(CHANNEL_ID, f"üì∞ *{title}*\n\n{description}\n[–ß–∏—Ç–∞—Ç—å –¥–∞–ª—å—à–µ]({link})", parse_mode="Markdown")

async def scheduler():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É RSS –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç."""
    while True:
        await fetch_rss()
        await asyncio.sleep(600)  # 10 –º–∏–Ω—É—Ç

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    await bot.delete_webhook()
    asyncio.create_task(scheduler())  # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
